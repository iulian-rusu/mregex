name: build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        compiler: [gcc11, gcc13, clang14, clang16]
        include:
          - compiler: gcc11
            os: ubuntu-22.04
            CXX: g++-11

          - compiler: gcc13
            os: ubuntu-22.04
            CXX: g++-13

          - compiler: clang14
            os: ubuntu-22.04
            CXX: clang++-14

          - compiler: clang16
            os: ubuntu-22.04
            CXX: clang++-16

    runs-on: ${{ matrix.os }}
    env:
      CXX: ${{ matrix.CXX }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up keyring directory
        run: sudo mkdir -p /etc/apt/keyrings

      - name: Install Clang
        if: ${{ startsWith(matrix.compiler, 'clang') }}
        run: |
          curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/llvm.gpg > /dev/null
          if [[ "${{ matrix.compiler }}" == "clang14" ]]; then
            echo "deb [signed-by=/etc/apt/keyrings/llvm.gpg] https://apt.llvm.org/jammy/ llvm-toolchain-jammy-14 main" | sudo tee /etc/apt/sources.list.d/llvm.list
            sudo apt update
            sudo apt install -y clang-14
          elif [[ "${{ matrix.compiler }}" == "clang16" ]]; then
            echo "deb [signed-by=/etc/apt/keyrings/llvm.gpg] https://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main" | sudo tee /etc/apt/sources.list.d/llvm.list
            sudo apt update
            sudo apt install -y clang-16
          fi
          $CXX --version

      - name: Install GCC
        if: ${{ startsWith(matrix.compiler, 'gcc') }}
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y $CXX
          $CXX --version

      - name: Install CMake
        run: |
          sudo apt install -y cmake
          cmake --version

      - name: CMake generate Makefiles
        run: cmake -S . -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release

      - name: CMake build
        run: cmake --build build --target all --config Release -- -j$(nproc)
