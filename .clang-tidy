Checks:
  abseil-no-namespace,
  bugprone-*,
  clang-analyzer-cplusplus.*,
  clang-analyzer-deadcode.*,
  clang-analyzer-nullability.*,
  -cert-dcl21-cpp,
  google-default-arguments,
  google-runtime-operator,
  misc-*,
  -misc-forwarding-reference-overload,
  -misc-non-private-member-variables-in-classes,
  modernize-*,
  -modernize-avoid-c-arrays,
  -modernize-use-trailing-return-type,
  -modernize-use-nodiscard,
  performance-*,
  readability-*,
  -readability-braces-around-statements,
  -readability-identifier-length,
  -readability-named-parameter,
  -readability-uppercase-literal-suffix
FormatStyle: file
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,             value: lower_case }
  - { key: readability-identifier-naming.ClassCase,                 value: lower_case }
  - { key: readability-identifier-naming.StructCase,                value: lower_case }
  - { key: readability-identifier-naming.TemplateParameterCase,     value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,              value: lower_case }
  - { key: readability-identifier-naming.VariableCase,              value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,       value: _          }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,     value: _          }
  - { key: readability-identifier-naming.MacroDefinitionCase,       value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,          value: lower_case }
  - { key: readability-identifier-naming.ConstexprVariableCase,     value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase,        value: lower_case }
  - { key: readability-identifier-naming.MemberConstantCase,        value: lower_case }
  - { key: readability-identifier-naming.StaticConstantCase,        value: lower_case }
  - { key: readability-magic-numbers.IgnoredIntegerValues,          value: 0;1;10     }
  - { key: readability-magic-numbers.IgnorePowersOf2IntegerValues,  value: 1          }